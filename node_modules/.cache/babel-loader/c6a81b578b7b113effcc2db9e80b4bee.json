{"ast":null,"code":"import _regeneratorRuntime from \"/home/abhishek/Desktop/fyle/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/abhishek/Desktop/fyle/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/abhishek/Desktop/fyle/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/abhishek/Desktop/fyle/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abhishek/Desktop/fyle/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abhishek/Desktop/fyle/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abhishek/Desktop/fyle/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abhishek/Desktop/fyle/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abhishek/Desktop/fyle/src/App.js\";\nimport React, { Component } from 'react';\nimport { XmlEntities as Entities } from 'html-entities';\nimport _ from 'lodash';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true,\n      questions: [],\n      selected: [false, false, false, false, false, false, false, false, false, false]\n    };\n\n    _this.setAnswer = function (e) {\n      e.preventDefault();\n      var index = e.target.name;\n\n      var selected = _toConsumableArray(_this.state.selected);\n\n      if (_this.state.questions[index].correct_answer === e.target.value) {\n        selected[index] = true;\n      } else {\n        selected[index] = false;\n      }\n\n      _this.setState({\n        selected: selected\n      }, function () {\n        return console.log(_this.state.selected);\n      });\n    };\n\n    _this.submit = function (e) {\n      e.preventDefault();\n      var selected = _this.state.selected;\n      var correct = selected.filter(function (value) {\n        return value;\n      }).length;\n      console.log(correct);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var url, response, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                url = \"https://opentdb.com/api.php?amount=10\";\n                _context.next = 3;\n                return fetch(url);\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.json();\n\n              case 6:\n                data = _context.sent;\n                this.setState({\n                  questions: data.results\n                });\n                console.log(this.state.questions);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var questions = this.state.questions;\n      var entities = new Entities();\n      var questionList = questions.map(function (question, index) {\n        var answers = [question.correct_answer].concat(_toConsumableArray(question.incorrect_answers));\n\n        var shuffledAnswers = _.shuffle(answers); // console.log(shuffledAnswers, question.correct_answer);\n\n\n        return React.createElement(\"div\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, index + 1, \".\", entities.decode(question.question)), shuffledAnswers.length === 2 ? React.createElement(\"div\", {\n          onChange: _this2.setAnswer.bind(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: shuffledAnswers[0],\n          name: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }), entities.decode(shuffledAnswers[0])), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: shuffledAnswers[1],\n          name: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }), entities.decode(shuffledAnswers[1]))) : React.createElement(\"div\", {\n          onChange: _this2.setAnswer.bind(_this2),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: shuffledAnswers[0],\n          name: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }), entities.decode(shuffledAnswers[0])), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: shuffledAnswers[1],\n          name: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }), entities.decode(shuffledAnswers[1])), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: shuffledAnswers[2],\n          name: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }), entities.decode(shuffledAnswers[2])), React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          value: shuffledAnswers[3],\n          name: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }), entities.decode(shuffledAnswers[3]))));\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.state.Loading || !this.state.questions ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Loading...\") : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.submit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, questionList, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/abhishek/Desktop/fyle/src/App.js"],"names":["React","Component","XmlEntities","Entities","_","App","state","loading","questions","selected","setAnswer","e","preventDefault","index","target","name","correct_answer","value","setState","console","log","submit","correct","filter","length","url","fetch","response","json","data","results","entities","questionList","map","question","answers","incorrect_answers","shuffledAnswers","shuffle","decode","bind","Loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { XmlEntities as Entities } from 'html-entities';\nimport _ from 'lodash';\n\nclass App extends Component {\n  \n  state = {\n    loading: true,\n    questions:[],\n    selected:[false,false,false,false,false,false,false,false,false,false]\n  };\n\n  async componentDidMount() {\n    const url = \"https://opentdb.com/api.php?amount=10\";\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({\n      questions:data.results\n    });\n    console.log(this.state.questions);\n  }\n\n\n  setAnswer = (e) => {\n    e.preventDefault();\n    const index = e.target.name;\n    const selected = [...this.state.selected];\n    if (this.state.questions[index].correct_answer === e.target.value) {\n      selected[index] = true;\n    } else {\n      selected[index] = false;\n    }\n\n    this.setState({ selected }, () => console.log(this.state.selected));\n  }\n\n  submit = (e) => {\n    e.preventDefault();\n    const { selected } = this.state;\n\n    let correct = selected.filter(value => value).length;\n    console.log(correct);\n  }\n\n  render() { \n    const {questions}= this.state\n    const entities = new Entities();\n    const questionList = questions.map((question,index) => {\n      const answers = [question.correct_answer, ...question.incorrect_answers];\n      const shuffledAnswers = _.shuffle(answers);\n      // console.log(shuffledAnswers, question.correct_answer);\n        return(\n            <div key={index}>             \n               <div>{index+1}.{entities.decode(question.question)}</div>\n               {shuffledAnswers.length === 2 ? (\n                  <div onChange={this.setAnswer.bind(this)}>\n                    <label>\n                      <input type=\"radio\" \n                        value={shuffledAnswers[0]}\n                        name={index}\n                      />{entities.decode(shuffledAnswers[0])}\n                    </label>\n                    <label>\n                      <input type=\"radio\" \n                        value={shuffledAnswers[1]}\n                        name={index}\n                      />{entities.decode(shuffledAnswers[1])}\n                    </label>\n                  </div>  \n                ) : (\n                  <div onChange={this.setAnswer.bind(this)}>\n                      <label>\n                      <input type=\"radio\" \n                        value={shuffledAnswers[0]}\n                        name={index}\n                      />{entities.decode(shuffledAnswers[0])}\n                    </label>\n                    <label>\n                      <input type=\"radio\" \n                        value={shuffledAnswers[1]}\n                        name={index}\n                      />{entities.decode(shuffledAnswers[1])}\n                    </label>\n                    <label>\n                      <input type=\"radio\" \n                        value={shuffledAnswers[2]}\n                        name={index}\n                      />{entities.decode(shuffledAnswers[2])}\n                    </label>\n                    <label>\n                      <input type=\"radio\" \n                        value={shuffledAnswers[3]}\n                        name={index}\n                      />{entities.decode(shuffledAnswers[3])}\n                    </label>\n                  </div> \n                )}     \n            </div>\n          )\n      })\n    \n      return(\n        <div>\n          {this.state.Loading || !this.state.questions ? (\n            <div>Loading...</div>\n            ) : (\n              <div>\n              <form onSubmit={this.submit}>\n                {questionList}\n                <button type=\"submit\">Submit</button>\n              </form>\n              </div>\n            )}        \n        </div>\n      )\n    }\n  }\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}